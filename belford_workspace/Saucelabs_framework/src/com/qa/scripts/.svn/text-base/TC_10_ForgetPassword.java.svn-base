///////////////////Script Info //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Script Name:												ForgetPassword
//TestCase Summary: 										Verify that user is able to access forget password functionality
//What the script does/TestCase Description:				Following is what Scripts does
//															1. Executes forget password functionality for some existing user.
//															2. Make sure that password reset confirmation page is displayed.
//What script(s) should be run before this script:			N/A
//What script(s) should be run after this script:			N/A
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

package com.qa.scripts;

import org.testng.annotations.*;
import org.testng.Assert;
import com.qa.Functions.common.CommonUtils;
import com.qa.Functions.webdriver.UIEvents;

public class TC_10_ForgetPassword extends SetupScript {
	//This is the test cases to ensure that forget password functionality is working.
	@Test(description="TC_08_Verify that user is able to access forget password functionality.", groups="SmokeTest")	
		public void forgetPassword() throws Exception {
		//System is clicking on Signin/Signup link
		UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "lnk_Login_Singup"));
		
		//System is clicking on Signin button
		UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "btn_SingIn"));
			
		//System is clicking on Forget Password button
		UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "btn_ForgetPassword"));	
		
	
		//System is typing the email address of the user in email text box
		UIEvents.type(driver, CommonUtils.readIni("Repository.ini", "txt_ForgetPasswordEmail"), CommonUtils.readIni("TestData.ini", "ForgetPasswordUser"));
				
		//System is clicking on Forget Password button
		UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "btn_ForgetPasswordButton"));
		
		//System is waiting for seconds specified
		CommonUtils.waitForChangesToReflect(CommonUtils.toInt(CommonUtils.readIni("Environment.ini", "INTERVAL")));
		
		//Sytem ensures that the password reset confirmation page is displayed.
		Assert.assertNotNull(UIEvents.waitForElement(driver, CommonUtils.readIni("Repository.ini", "RestPasswordConfirmationPage")));
	}		
		
}