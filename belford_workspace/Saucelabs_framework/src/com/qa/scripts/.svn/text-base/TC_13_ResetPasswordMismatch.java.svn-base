// Password mIsmatch script
package com.qa.scripts;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.qa.Functions.common.CommonUtils;
import com.qa.Functions.webdriver.UIEvents;
import com.qa.ReusableActions.ReusableActions;

public class TC_13_ResetPasswordMismatch extends SetupScript{
	

	@Test(description="TC_24_Verify that user is not able to reset password if New Pasword and confirm password mismatch", groups="SmokeTest")	
	public void PasswordMismatch () throws Exception {
	
		//This sections calls the reusable action to signin application with the provided username and password
		ReusableActions.accountSignIn(driver, CommonUtils.readIni("TestData.ini","txt_ResetPasswordUser"), CommonUtils.readIni("TestData.ini", "txt_OldPassword"));
	
	//System clicks on the My deals button.
	UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "btn_MyDeals"));
				
	//System clicks on the My Account button.
	UIEvents.click(driver, CommonUtils.readIni("Repository.ini", "btn_MyAccount"));
		
	//System Calls reusable action to reset the password with the provided new and old password.
	ReusableActions.passwordMismatch(driver,CommonUtils.readIni("TestData.ini", "txt_OldPassword") , CommonUtils.readIni("TestData.ini", "txt_NewPassword"),CommonUtils.readIni("TestData.ini", "txt_confirmpassword"));
	
	//System is ensuring whether the user is able to reset the password through accounts page.
	Assert.assertNotNull(UIEvents.waitForElement(driver, CommonUtils.readIni("Repository.ini", "password_mismatch")));


}	

}
